# Task ID: 8
# Title: Build Command-Line Interface
# Status: pending
# Dependencies: 1, 4
# Priority: medium
# Description: Develop a CLI for configuring and launching training.
# Details:
Use argparse to create a command-line interface for setting hyperparameters, specifying datasets, and starting training. Include help messages and default values.

# Test Strategy:
Test the CLI with various arguments to ensure correct configuration and training launch.

# Subtasks:
## 1. Setting up argparse [done]
### Dependencies: None
### Description: Initialize the argparse module to handle command-line arguments.
### Details:
Create a basic argparse setup including the parser object and basic configurations like description and help messages.
<info added on 2025-05-11T08:43:40.256Z>
Completed basic argparse setup with the following implementations:
1. Created `src/utils/cli.py` with functions: `create_parser()` for parser configuration, `parse_args()` for argument parsing, `load_config()` for config file loading, and `print_args_info()` for argument display.
2. Updated `src/utils/__init__.py` to export CLI functions.
3. Developed test tools: `scripts/test_cli.py` for CLI testing and `scripts/example_config.json` as a sample config file.
4. Created an example entry script `scripts/train.py` demonstrating CLI usage with parameter parsing, config creation, and environment setup.

Parameters are organized into groups: general, dataset, model, training, logging, and checkpoint. CLI arguments integrate with the existing config system, allowing config file parameters to be overridden by command-line arguments. Testing confirmed proper functionality, laying the groundwork for subsequent tasks 8.2 (hyperparameters), 8.3 (dataset specifications), and 8.4 (CLI testing).
</info added on 2025-05-11T08:43:40.256Z>

## 2. Adding hyperparameter arguments [done]
### Dependencies: 8.1
### Description: Add arguments for hyperparameters to the CLI.
### Details:
Define hyperparameters such as learning rate, batch size, and number of epochs as command-line arguments with appropriate types and default values.
<info added on 2025-05-11T08:58:22.121Z>
Completed adding hyperparameter arguments to the CLI. Implemented the following:
1. Added hyperparameters in src/utils/cli.py:
   - Loss function type: --loss-type
   - Optimizer-specific parameters: momentum, nesterov, beta1, beta2, amsgrad, eps, alpha, centered
   - Learning rate scheduler parameters: step-size, gamma, milestones, t-max, eta-min, cooldown, factor, min-lr
2. Enhanced parse_args function to handle delimiter-separated milestones parameter.
3. Updated print_args_info function to include new hyperparameters in train_args list.
4. Updated test_cli.py with test cases for:
   - Basic hyperparameter parsing
   - Optimizer-specific parameters
   - Learning rate scheduler parameters
   - Combined CLI and config file hyperparameters
5. Updated example_config.json with new hyperparameter configurations.
All tests passed successfully, confirming correct parsing and display of new hyperparameters.
</info added on 2025-05-11T08:58:22.121Z>

## 3. Adding dataset specification [done]
### Dependencies: 8.1
### Description: Add arguments to specify the dataset and related configurations.
### Details:
Include arguments for dataset paths, splits (train/validation/test), and any dataset-specific parameters like augmentation options.
<info added on 2025-05-11T09:15:08.047Z>
Include arguments for dataset paths, splits (train/validation/test), and any dataset-specific parameters like augmentation options. Implemented in src/utils/cli.py with the following dataset-related argument groups: dataset-type, dataset-path, class-map-file for dataset type and source; test-split, use-train-val-test-dirs, train-dir, val-dir, test-dir, cross-validation, num-folds, fold-index for data split configuration; use-augmentation, aug-rotate, aug-translate, aug-scale, aug-shear, aug-hflip, aug-vflip, aug-color-jitter, aug-brightness, aug-contrast, aug-saturation, aug-hue, aug-grayscale-prob, aug-gaussian-blur, aug-cutout, aug-mixup, aug-mixup-alpha, aug-cutmix, aug-cutmix-alpha for data augmentation options; normalize, normalize-mean, normalize-std, resize-mode, center-crop for data preprocessing options; use-weighted-sampler, sample-weights-file, oversampling, undersampling for data sampling options. Updated parse_args() to handle normalize-mean and normalize-std by converting comma-separated strings to float lists. Enhanced print_args_info() to display all new parameters. Added test cases in scripts/test_cli.py and example configurations in scripts/example_config.json. All new features are verified to work correctly via command line and configuration file.
</info added on 2025-05-11T09:15:08.047Z>

## 4. Testing CLI with various arguments [pending]
### Dependencies: 8.1, 8.2, 8.3
### Description: Test the CLI with different combinations of arguments to ensure correctness.
### Details:
Run the CLI with various argument combinations, including edge cases, to verify that all arguments are parsed correctly and the program behaves as expected.

